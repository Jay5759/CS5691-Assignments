Dear Avinash,
A problem A is NP hard if  every problem B in NP is reducible to A.  For A to be NP hard, it's not necessary that A  is in NP. Now, additionally, if A is also in NP, then A is said to be NP complete.

For example many of the optimization problems are NP hard, but they are not in NP simply because they are not decision problems.
Examples: 
1) Minimum Vertex Cover problem: Given a graph G, output a minimum size vertex cover
2) Maximum Clique: Given G, output a maximum size clique in G
3) #SAT: Given a CNF, compute the number of satisfying assignments to the given CNF.

There are also decision problems that are known to be NP hard but not known to be NP complete (i.e., not known to be in NP):
E.g:    Given a bipartite graph G with vertex set V and an integer k, decide  whether there exists a subset  S of V of size at most k  such that for every maximal independent set I of G,  S has at least one element from I.

Showing NP-hardness for these is beyond the scope of this course.

Best
-Raghu